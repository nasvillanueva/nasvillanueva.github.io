{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/dev/migrating-docker-images","result":{"data":{"site":{"siteMetadata":{"title":"nandemonas","author":"Nas Villanueva"}},"post":{"id":"926afc59-81a0-5019-8faa-5cc20ee08641","html":"<p>Do you run your own Docker Registry server? Ever got tired of tagging\nall your images with the registry URL and pushing them one by one? Well,\nwe do and it is very exhausting when you keep doing it again and again. So\nI came up with this script.</p>\n<!--excerpt-->\n<blockquote>\n<p>Disclaimer: I was at a different company when I created this post.</p>\n</blockquote>\n<h3>Context</h3>\n<p>We’re developing an enterprise software for a client with a microservices\narchitecture that utilizes <a href=\"https://www.docker.com/\">Docker</a> containers and <a href=\"https://dcos.io/\">DC/OS</a>\norchestration.</p>\n<h3>Our Setup</h3>\n<ul>\n<li>Dozens of microservices built with <a href=\"https://spring.io/\">Spring Framework</a></li>\n<li>Microservices runs on <a href=\"https://dcos.io/\">DC/OS</a>.</li>\n<li>Few environments (development, staging, production) each having their\nown registry.</li>\n</ul>\n<p>Some of the things you might ask me:</p>\n<ul>\n<li>\n<p><strong><em>“Why the f*** do you have more than one registry?”</em></strong>\nProduction was intended to have its own registry since it doesn’t have\nany access to the internet.</p>\n</li>\n<li>\n<p><strong><em>“Why not use a third party private docker registry?”</em></strong>\nProduction servers doesn’t have any internet access (most of the app\nis meant to be access via VPN)</p>\n</li>\n<li>\n<p><strong><em>“Why not use <a href=\"https://jenkins.io/\">Jenkins</a> or some other in-premise CI/CD that\ncan automatically tag and push your images to your different\nenvirnments?”</em></strong>\nActually, I’m not so sure because I’ve heard other companies use CI/CD\nfrom development -> production. Maybe the client doesn’t want CI/CD in\nthe production environment. I really don’t have any idea regarding this.</p>\n</li>\n</ul>\n<h3>Problem</h3>\n<p>It is a pain in the arse when you need to manually tag and push all your\nimages from one registry to another, whether it may come from your local\nmachine or one of your registry servers.</p>\n<h3>Solution</h3>\n<p>I’ve written a <a href=\"https://github.com/nasvillanueva/scripts/blob/master/transfer_images.sh\"><code class=\"language-text\">transfer_images.sh</code></a> found on my\n<a href=\"https://github.com/nasvillanueva/scripts\">scripts repo</a>.</p>\n<p>Usage:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-shell line-numbers\"><code class=\"language-shell\"> ./transfer_images.sh <span class=\"token punctuation\">[</span>-s source<span class=\"token punctuation\">]</span> <span class=\"token parameter variable\">-d</span> destination <span class=\"token parameter variable\">-m</span> matcher<span class=\"token punctuation\">[</span>,matcher2,matcher3<span class=\"token punctuation\">..</span>.<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>-p<span class=\"token punctuation\">]</span>\n where:\n    <span class=\"token parameter variable\">-h</span> print usage\n    <span class=\"token parameter variable\">-s</span> <span class=\"token builtin class-name\">source</span> registry <span class=\"token punctuation\">(</span>optional<span class=\"token punctuation\">)</span>\n        example: registry.hub.docker.com\n    <span class=\"token parameter variable\">-d</span> destination registry <span class=\"token punctuation\">(</span>required<span class=\"token punctuation\">)</span>\n        example: registry.mydomain.com\n    <span class=\"token parameter variable\">-m</span> matchers <span class=\"token punctuation\">(</span>required<span class=\"token punctuation\">)</span>\n        all the images that will be tagged with the destination\n        example nodejs,jenkins,chronos\n    <span class=\"token parameter variable\">-p</span> push images <span class=\"token punctuation\">(</span>optional<span class=\"token punctuation\">)</span>\n        push all tagged images</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3>Examples</h3>\n<p>Given these docker images in your local repositories:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-shell line-numbers\"><code class=\"language-shell\"> REPOSITORIES               TAG\n <span class=\"token function\">node</span>                       <span class=\"token number\">8</span>\n rabbitmq                   <span class=\"token number\">3.6</span>.9\n postgres                   <span class=\"token number\">9.6</span>.1\n yourregistry.com/node      <span class=\"token number\">8</span>\n yourregistry.com/rabbitmq  <span class=\"token number\">3.6</span>.9\n yourregistry.com/postgres  <span class=\"token number\">9.6</span>.1</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Tag <code class=\"language-text\">node</code> and <code class=\"language-text\">postgres</code> to <code class=\"language-text\">yourregistry.com</code></p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-shell line-numbers\"><code class=\"language-shell\"> ./transfer_images.sh <span class=\"token parameter variable\">-d</span> yourregistry.com <span class=\"token parameter variable\">-m</span> node,postgres</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>Tag <code class=\"language-text\">node</code> and <code class=\"language-text\">rabbitmq</code> tagged with <code class=\"language-text\">yourregistry.com</code> to <code class=\"language-text\">yourotherregistry.com</code> and then push it</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-shell line-numbers\"><code class=\"language-shell\"> ./transfer_images.sh <span class=\"token parameter variable\">-s</span> yourregistry.com <span class=\"token parameter variable\">-d</span> yourotherregistry.com <span class=\"token parameter variable\">-m</span> node,rabbitmq <span class=\"token parameter variable\">-p</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<h3>Wrapping this up</h3>\n<p>So there you have it, my fancy transfer images script. I hope it will help\nsome of you guys/gals that face the same problem as I did. I’ll write\nmore scripts if I encounter more repetitive and/or tedious tasks.</p>","frontmatter":{"title":"Migrating Docker Images","date":"2017-08-11","tags":["Scripts","Docker","Shell","DevOps"]}},"relatedPosts":{"nodes":[{"frontmatter":{"tags":["Scripts","Docker","Shell","DevOps"],"date":"2017-08-11","title":"Migrating Docker Images"},"fields":{"readingTime":{"text":"3 min read"},"site":"dev","slug":"/dev/migrating-docker-images"}},{"frontmatter":{"tags":["Scripts","Bash","Shell"],"date":"2017-06-12","title":"Monitor Hotplug for Linux"},"fields":{"readingTime":{"text":"2 min read"},"site":"dev","slug":"/dev/monitor-hotplug"}},{"frontmatter":{"tags":["Scripts","Powershell","DevOps"],"date":"2019-03-15","title":"reset_edge.ps1 — Prevent Karma tests from breaking Microsoft Edge"},"fields":{"readingTime":{"text":"3 min read"},"site":"dev","slug":"/dev/reset-edge"}}]}},"pageContext":{"slug":"/dev/migrating-docker-images","tags":["Scripts","Docker","Shell","DevOps"]}},"staticQueryHashes":[]}