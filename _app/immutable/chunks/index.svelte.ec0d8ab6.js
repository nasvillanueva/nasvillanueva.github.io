import{S as Bs,i as Fs,s as xs,k as n,q as r,a as f,l as o,m as i,r as p,h as s,c,n as m,D as Ts,b as t,G as l,K as as}from"./index.06f43c05.js";const gs=""+new URL("../assets/sample.567c5173.gif",import.meta.url).href,qs=""+new URL("../assets/sample.2cef8b01.mov",import.meta.url).href;function Ns(Ls){let b,Me,W,h,G,Ae,X,$,N,Pe,ee,d,Gs=`<code class="language-bash"><span class="token shebang important">#!/usr/bin/env bash</span>

<span class="token assign-left variable">TEMP_DIR</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>mktemp <span class="token parameter variable">-d</span> $TMPDIR/gifify.<span class="token environment constant">$RANDOM</span><span class="token variable">)</span></span>

ffmpeg <span class="token parameter variable">-i</span> <span class="token variable">$1</span> <span class="token parameter variable">-r</span> <span class="token number">5</span> <span class="token string">"<span class="token variable">$TEMP_DIR</span>/frames-%03d.jpg"</span>

<span class="token assign-left variable">FILENAME</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">basename</span> $1<span class="token variable">)</span></span>

convert <span class="token parameter variable">-delay</span> <span class="token number">20</span> <span class="token parameter variable">-loop</span> <span class="token number">0</span> <span class="token variable">$TEMP_DIR</span>/frames-*.jpg <span class="token string">"<span class="token variable">$&#123;FILENAME<span class="token operator">%%</span>.*&#125;</span>.gif"</span>

<span class="token function">rm</span> <span class="token parameter variable">-rf</span> <span class="token variable">$TEMP_DIR</span></code>`,se,S,De,ae,k,C,E,Re,Te,Le,H,_,Ge,$e,te,w,I,Se,U,Ce,le,y,$s=`<code class="language-bash">ffmpeg                      <span class="token comment"># Call ffmpeg.</span>
    <span class="token parameter variable">-i</span> <span class="token variable">$1</span>                   <span class="token comment"># Pass script first argumen as input file.</span>
    <span class="token parameter variable">-r</span> <span class="token number">5</span>                    <span class="token comment"># Set framerate to 5.</span>
<span class="token string">"<span class="token variable">$TEMP_DIR</span>/frames-%03d.jpg"</span> <span class="token comment"># Tell ffmpeg where to put the slices,</span>
                            <span class="token comment"># with a filename template.</span></code>`,ne,M,A,He,j,Oe,oe,P,Ss=`<code class="language-bash">convert                     <span class="token comment"># Call ImageMagick convert.</span>
    <span class="token parameter variable">-delay</span> <span class="token number">20</span>               <span class="token comment"># Delay before the next image shows.</span>
    <span class="token parameter variable">-loop</span> <span class="token number">0</span>                 <span class="token comment"># Set loop to infinite.</span>
    <span class="token variable">$TEMP_DIR</span>/frames-*.jpg  <span class="token comment"># Tell ImageMagick where the slices are.</span>
    <span class="token string">"<span class="token variable">$&#123;FILENAME<span class="token operator">%%</span>.*&#125;</span>.gif"</span>   <span class="token comment"># Tell ImageMagick the output filename,</span>
                            <span class="token comment"># replacing the original extension to .gif</span></code>`,ie,re,pe,O,Q,Be,fe,D,B,Fe,ce,F,K,xe,me,x,ge,ue,R,g,qe,ve,T,Ne,V,Ue,be,u,Y,ts,je,ke,he,de,v,Qe,Z,Ke,Ve,z,Ye,Ee,L,ls,_e,we,Ie,q,Ze;return{c(){b=n("p"),Me=r(`At work, we use a service called Assembla, a service like Github. Sometimes, to make our tickets more understandable, we include screenshots or screencasts. But the problem is, on Assembla, they don’t have an embedded video player
for the screencast we upload, even when it’s in a web compatible format. So I created this script.`),W=f(),h=n("h1"),G=n("a"),Ae=r("The Script (not the band)"),X=f(),$=n("p"),N=n("code"),Pe=r("gifify.sh"),ee=f(),d=n("pre"),se=f(),S=n("p"),De=r("Before being able to run this script, you’d have to have these tools installed:"),ae=f(),k=n("ul"),C=n("li"),E=n("a"),Re=r("ffmpeg"),Te=r(" - for slicing your video into images; and"),Le=f(),H=n("li"),_=n("a"),Ge=r("ImageMagick"),$e=r(" - for combining your slices of images into a GIF."),te=f(),w=n("h3"),I=n("a"),Se=r("Let’s dissect "),U=n("code"),Ce=r("line 5"),le=f(),y=n("pre"),ne=f(),M=n("h3"),A=n("a"),He=r("And "),j=n("code"),Oe=r("line 9"),oe=f(),P=n("pre"),ie=f(),re=n("br"),pe=f(),O=n("blockquote"),Q=n("p"),Be=r("I am, by no means, an advanced user of ffmpeg nor ImageMagick, that’s why I only used minimal options for each tool."),fe=f(),D=n("h1"),B=n("a"),Fe=r("Running the script"),ce=f(),F=n("p"),K=n("code"),xe=r("gifify.sh ./sample.mov"),me=f(),x=n("p"),ge=r("This will produce a GIF file with the same filename as the input."),ue=f(),R=n("h1"),g=n("a"),qe=r("Demo"),ve=f(),T=n("p"),Ne=r("Here’s a screencast I recorded using Quicktime. "),V=n("code"),Ue=r("sample.mov"),be=f(),u=n("video"),Y=n("source"),je=r(`
    Your browser does not support the video tag.`),ke=f(),he=n("br"),de=f(),v=n("p"),Qe=r("Here’s a "),Z=n("em"),Ke=r("gifified"),Ve=r(" file. "),z=n("code"),Ye=r("sample.gif"),Ee=f(),L=n("img"),_e=f(),we=n("br"),Ie=f(),q=n("p"),Ze=r("Now, it’s easier to embed a screencastª, albeit fake, on Assembla (or even Github, GitLab, etc.)"),this.h()},l(e){b=o(e,"P",{});var a=i(b);Me=p(a,`At work, we use a service called Assembla, a service like Github. Sometimes, to make our tickets more understandable, we include screenshots or screencasts. But the problem is, on Assembla, they don’t have an embedded video player
for the screencast we upload, even when it’s in a web compatible format. So I created this script.`),a.forEach(s),W=c(e),h=o(e,"H1",{id:!0});var ns=i(h);G=o(ns,"A",{href:!0});var os=i(G);Ae=p(os,"The Script (not the band)"),os.forEach(s),ns.forEach(s),X=c(e),$=o(e,"P",{});var is=i($);N=o(is,"CODE",{});var rs=i(N);Pe=p(rs,"gifify.sh"),rs.forEach(s),is.forEach(s),ee=c(e),d=o(e,"PRE",{class:!0});var Cs=i(d);Cs.forEach(s),se=c(e),S=o(e,"P",{});var ps=i(S);De=p(ps,"Before being able to run this script, you’d have to have these tools installed:"),ps.forEach(s),ae=c(e),k=o(e,"UL",{});var ye=i(k);C=o(ye,"LI",{});var ze=i(C);E=o(ze,"A",{href:!0,rel:!0});var fs=i(E);Re=p(fs,"ffmpeg"),fs.forEach(s),Te=p(ze," - for slicing your video into images; and"),ze.forEach(s),Le=c(ye),H=o(ye,"LI",{});var Je=i(H);_=o(Je,"A",{href:!0,rel:!0});var cs=i(_);Ge=p(cs,"ImageMagick"),cs.forEach(s),$e=p(Je," - for combining your slices of images into a GIF."),Je.forEach(s),ye.forEach(s),te=c(e),w=o(e,"H3",{id:!0});var ms=i(w);I=o(ms,"A",{href:!0});var We=i(I);Se=p(We,"Let’s dissect "),U=o(We,"CODE",{});var us=i(U);Ce=p(us,"line 5"),us.forEach(s),We.forEach(s),ms.forEach(s),le=c(e),y=o(e,"PRE",{class:!0});var Hs=i(y);Hs.forEach(s),ne=c(e),M=o(e,"H3",{id:!0});var vs=i(M);A=o(vs,"A",{href:!0});var Xe=i(A);He=p(Xe,"And "),j=o(Xe,"CODE",{});var bs=i(j);Oe=p(bs,"line 9"),bs.forEach(s),Xe.forEach(s),vs.forEach(s),oe=c(e),P=o(e,"PRE",{class:!0});var Os=i(P);Os.forEach(s),ie=c(e),re=o(e,"BR",{}),pe=c(e),O=o(e,"BLOCKQUOTE",{});var ks=i(O);Q=o(ks,"P",{});var hs=i(Q);Be=p(hs,"I am, by no means, an advanced user of ffmpeg nor ImageMagick, that’s why I only used minimal options for each tool."),hs.forEach(s),ks.forEach(s),fe=c(e),D=o(e,"H1",{id:!0});var ds=i(D);B=o(ds,"A",{href:!0});var Es=i(B);Fe=p(Es,"Running the script"),Es.forEach(s),ds.forEach(s),ce=c(e),F=o(e,"P",{});var _s=i(F);K=o(_s,"CODE",{});var ws=i(K);xe=p(ws,"gifify.sh ./sample.mov"),ws.forEach(s),_s.forEach(s),me=c(e),x=o(e,"P",{});var Is=i(x);ge=p(Is,"This will produce a GIF file with the same filename as the input."),Is.forEach(s),ue=c(e),R=o(e,"H1",{id:!0});var ys=i(R);g=o(ys,"A",{href:!0});var Ms=i(g);qe=p(Ms,"Demo"),Ms.forEach(s),ys.forEach(s),ve=c(e),T=o(e,"P",{});var es=i(T);Ne=p(es,"Here’s a screencast I recorded using Quicktime. "),V=o(es,"CODE",{});var As=i(V);Ue=p(As,"sample.mov"),As.forEach(s),es.forEach(s),be=c(e),u=o(e,"VIDEO",{width:!0,height:!0});var ss=i(u);Y=o(ss,"SOURCE",{src:!0}),je=p(ss,`
    Your browser does not support the video tag.`),ss.forEach(s),ke=c(e),he=o(e,"BR",{}),de=c(e),v=o(e,"P",{});var J=i(v);Qe=p(J,"Here’s a "),Z=o(J,"EM",{});var Ps=i(Z);Ke=p(Ps,"gifified"),Ps.forEach(s),Ve=p(J," file. "),z=o(J,"CODE",{});var Ds=i(z);Ye=p(Ds,"sample.gif"),Ds.forEach(s),J.forEach(s),Ee=c(e),L=o(e,"IMG",{src:!0,alt:!0}),_e=c(e),we=o(e,"BR",{}),Ie=c(e),q=o(e,"P",{});var Rs=i(q);Ze=p(Rs,"Now, it’s easier to embed a screencastª, albeit fake, on Assembla (or even Github, GitLab, etc.)"),Rs.forEach(s),this.h()},h(){m(G,"href","#the-script-not-the-band"),m(h,"id","the-script-not-the-band"),m(d,"class","language-bash"),m(E,"href","https://www.ffmpeg.org"),m(E,"rel","nofollow"),m(_,"href","https://www.imagemagick.org"),m(_,"rel","nofollow"),m(I,"href","#lets-dissect-line-5"),m(w,"id","lets-dissect-line-5"),m(y,"class","language-bash"),m(A,"href","#and-line-9"),m(M,"id","and-line-9"),m(P,"class","language-bash"),m(B,"href","#running-the-script"),m(D,"id","running-the-script"),m(g,"href","#demo"),m(R,"id","demo"),Ts(Y.src,ts=qs)||m(Y,"src",ts),m(u,"width","100%"),m(u,"height","auto"),u.controls=!0,Ts(L.src,ls=gs)||m(L,"src",ls),m(L,"alt","sample.gif")},m(e,a){t(e,b,a),l(b,Me),t(e,W,a),t(e,h,a),l(h,G),l(G,Ae),t(e,X,a),t(e,$,a),l($,N),l(N,Pe),t(e,ee,a),t(e,d,a),d.innerHTML=Gs,t(e,se,a),t(e,S,a),l(S,De),t(e,ae,a),t(e,k,a),l(k,C),l(C,E),l(E,Re),l(C,Te),l(k,Le),l(k,H),l(H,_),l(_,Ge),l(H,$e),t(e,te,a),t(e,w,a),l(w,I),l(I,Se),l(I,U),l(U,Ce),t(e,le,a),t(e,y,a),y.innerHTML=$s,t(e,ne,a),t(e,M,a),l(M,A),l(A,He),l(A,j),l(j,Oe),t(e,oe,a),t(e,P,a),P.innerHTML=Ss,t(e,ie,a),t(e,re,a),t(e,pe,a),t(e,O,a),l(O,Q),l(Q,Be),t(e,fe,a),t(e,D,a),l(D,B),l(B,Fe),t(e,ce,a),t(e,F,a),l(F,K),l(K,xe),t(e,me,a),t(e,x,a),l(x,ge),t(e,ue,a),t(e,R,a),l(R,g),l(g,qe),t(e,ve,a),t(e,T,a),l(T,Ne),l(T,V),l(V,Ue),t(e,be,a),t(e,u,a),l(u,Y),l(u,je),t(e,ke,a),t(e,he,a),t(e,de,a),t(e,v,a),l(v,Qe),l(v,Z),l(Z,Ke),l(v,Ve),l(v,z),l(z,Ye),t(e,Ee,a),t(e,L,a),t(e,_e,a),t(e,we,a),t(e,Ie,a),t(e,q,a),l(q,Ze)},p:as,i:as,o:as,d(e){e&&s(b),e&&s(W),e&&s(h),e&&s(X),e&&s($),e&&s(ee),e&&s(d),e&&s(se),e&&s(S),e&&s(ae),e&&s(k),e&&s(te),e&&s(w),e&&s(le),e&&s(y),e&&s(ne),e&&s(M),e&&s(oe),e&&s(P),e&&s(ie),e&&s(re),e&&s(pe),e&&s(O),e&&s(fe),e&&s(D),e&&s(ce),e&&s(F),e&&s(me),e&&s(x),e&&s(ue),e&&s(R),e&&s(ve),e&&s(T),e&&s(be),e&&s(u),e&&s(ke),e&&s(he),e&&s(de),e&&s(v),e&&s(Ee),e&&s(L),e&&s(_e),e&&s(we),e&&s(Ie),e&&s(q)}}}const js={title:"gifify.sh — Convert Videos to GIFs",date:"2018-10-15T06:34:39Z",tags:["Scripts","Shell","Bash"]};class Qs extends Bs{constructor(b){super(),Fs(this,b,null,Ns,xs,{})}}export{Qs as default,js as metadata};
