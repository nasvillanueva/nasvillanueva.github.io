import{S as er,i as tr,s as ar,k as r,q as n,a as u,l as s,m as o,r as l,h as t,c as f,n as c,b as p,G as a,K as ta}from"./index.06f43c05.js";function rr(Ja){let g,Qe,De,N,le,Ze,Ce,k,z,Xe,Pe,d,Ye,w,$e,et,b,tt,at,Se,I,F,rt,Oe,v,j,st,D,ot,nt,C,lt,P,it,pt,ct,ie,ut,xe,J,ft,Ae,y,pe,K,ce,ue,ht,mt,dt,fe,V,he,me,vt,yt,Et,de,B,ve,S,_t,O,gt,kt,wt,Le,x,Q,bt,Te,Z,It,Me,A,X,Dt,Re,E,Ct,L,ye,Pt,St,T,Ot,xt,qe,Y,At,We,M,Ka=`<code class="language-shell"> ./transfer_images.sh <span class="token punctuation">[</span>-s source<span class="token punctuation">]</span> <span class="token parameter variable">-d</span> destination <span class="token parameter variable">-m</span> matcher<span class="token punctuation">[</span>,matcher2,matcher3<span class="token punctuation">..</span>.<span class="token punctuation">]</span> <span class="token punctuation">[</span>-p<span class="token punctuation">]</span>
 where:
    <span class="token parameter variable">-h</span> print usage
    <span class="token parameter variable">-s</span> <span class="token builtin class-name">source</span> registry <span class="token punctuation">(</span>optional<span class="token punctuation">)</span>
        example: registry.hub.docker.com
    <span class="token parameter variable">-d</span> destination registry <span class="token punctuation">(</span>required<span class="token punctuation">)</span>
        example: registry.mydomain.com
    <span class="token parameter variable">-m</span> matchers <span class="token punctuation">(</span>required<span class="token punctuation">)</span>
        all the images that will be tagged with the destination
        example nodejs,jenkins,chronos
    <span class="token parameter variable">-p</span> push images <span class="token punctuation">(</span>optional<span class="token punctuation">)</span>
        push all tagged images</code>`,He,R,$,Lt,Ge,ee,Tt,Ue,q,Va=`<code class="language-shell"> REPOSITORIES               TAG
 <span class="token function">node</span>                       <span class="token number">8</span>
 rabbitmq                   <span class="token number">3.6</span>.9
 postgres                   <span class="token number">9.6</span>.1
 yourregistry.com/node      <span class="token number">8</span>
 yourregistry.com/rabbitmq  <span class="token number">3.6</span>.9
 yourregistry.com/postgres  <span class="token number">9.6</span>.1</code>`,Ne,m,Mt,Ee,Rt,qt,_e,Wt,Ht,ge,Gt,ze,W,Ba='<code class="language-shell"> ./transfer_images.sh <span class="token parameter variable">-d</span> yourregistry.com <span class="token parameter variable">-m</span> node,postgres</code>',Fe,h,Ut,ke,Nt,zt,we,Ft,jt,be,Jt,Kt,Ie,Vt,Bt,je,H,Qa='<code class="language-shell"> ./transfer_images.sh <span class="token parameter variable">-s</span> yourregistry.com <span class="token parameter variable">-d</span> yourotherregistry.com <span class="token parameter variable">-m</span> node,rabbitmq <span class="token parameter variable">-p</span></code>',Je,G,te,Qt,Ke,ae,Zt;return{c(){g=r("p"),Qe=n(`Do you run your own Docker Registry server? Ever got tired of tagging
all your images with the registry URL and pushing them one by one? Well,
we do and it is very exhausting when you keep doing it again and again. So
I came up with this script.`),De=u(),N=r("blockquote"),le=r("p"),Ze=n("Disclaimer: I was at a different company when I created this post."),Ce=u(),k=r("h3"),z=r("a"),Xe=n("Context"),Pe=u(),d=r("p"),Ye=n(`We’re developing an enterprise software for a client with a microservices
architecture that utilizes `),w=r("a"),$e=n("Docker"),et=n(" containers and "),b=r("a"),tt=n("DC/OS"),at=n(`
orchestration.`),Se=u(),I=r("h3"),F=r("a"),rt=n("Our Setup"),Oe=u(),v=r("ul"),j=r("li"),st=n("Dozens of microservices built with "),D=r("a"),ot=n("Spring Framework"),nt=u(),C=r("li"),lt=n("Microservices runs on "),P=r("a"),it=n("DC/OS"),pt=n("."),ct=u(),ie=r("li"),ut=n(`Few environments (development, staging, production) each having their
own registry.`),xe=u(),J=r("p"),ft=n("Some of the things you might ask me:"),Ae=u(),y=r("ul"),pe=r("li"),K=r("p"),ce=r("strong"),ue=r("em"),ht=n("“Why the f*** do you have more than one registry?”"),mt=n(`
Production was intended to have its own registry since it doesn’t have
any access to the internet.`),dt=u(),fe=r("li"),V=r("p"),he=r("strong"),me=r("em"),vt=n("“Why not use a third party private docker registry?”"),yt=n(`
Production servers doesn’t have any internet access (most of the app
is meant to be access via VPN)`),Et=u(),de=r("li"),B=r("p"),ve=r("strong"),S=r("em"),_t=n("“Why not use "),O=r("a"),gt=n("Jenkins"),kt=n(` or some other in-premise CI/CD that
can automatically tag and push your images to your different
envirnments?”`),wt=n(`
Actually, I’m not so sure because I’ve heard other companies use CI/CD
from development -> production. Maybe the client doesn’t want CI/CD in
the production environment. I really don’t have any idea regarding this.`),Le=u(),x=r("h3"),Q=r("a"),bt=n("Problem"),Te=u(),Z=r("p"),It=n(`It is a pain in the arse when you need to manually tag and push all your
images from one registry to another, whether it may come from your local
machine or one of your registry servers.`),Me=u(),A=r("h3"),X=r("a"),Dt=n("Solution"),Re=u(),E=r("p"),Ct=n("I’ve written a "),L=r("a"),ye=r("code"),Pt=n("transfer_images.sh"),St=n(` found on my
`),T=r("a"),Ot=n("scripts repo"),xt=n("."),qe=u(),Y=r("p"),At=n("Usage:"),We=u(),M=r("pre"),He=u(),R=r("h3"),$=r("a"),Lt=n("Examples"),Ge=u(),ee=r("p"),Tt=n("Given these docker images in your local repositories:"),Ue=u(),q=r("pre"),Ne=u(),m=r("p"),Mt=n("Tag "),Ee=r("code"),Rt=n("node"),qt=n(" and "),_e=r("code"),Wt=n("postgres"),Ht=n(" to "),ge=r("code"),Gt=n("yourregistry.com"),ze=u(),W=r("pre"),Fe=u(),h=r("p"),Ut=n("Tag "),ke=r("code"),Nt=n("node"),zt=n(" and "),we=r("code"),Ft=n("rabbitmq"),jt=n(" tagged with "),be=r("code"),Jt=n("yourregistry.com"),Kt=n(" to "),Ie=r("code"),Vt=n("yourotherregistry.com"),Bt=n(" and then push it"),je=u(),H=r("pre"),Je=u(),G=r("h3"),te=r("a"),Qt=n("Wrapping this up"),Ke=u(),ae=r("p"),Zt=n(`So there you have it, my fancy transfer images script. I hope it will help
some of you guys/gals that face the same problem as I did. I’ll write
more scripts if I encounter more repetitive and/or tedious tasks.`),this.h()},l(e){g=s(e,"P",{});var i=o(g);Qe=l(i,`Do you run your own Docker Registry server? Ever got tired of tagging
all your images with the registry URL and pushing them one by one? Well,
we do and it is very exhausting when you keep doing it again and again. So
I came up with this script.`),i.forEach(t),De=f(e),N=s(e,"BLOCKQUOTE",{});var aa=o(N);le=s(aa,"P",{});var ra=o(le);Ze=l(ra,"Disclaimer: I was at a different company when I created this post."),ra.forEach(t),aa.forEach(t),Ce=f(e),k=s(e,"H3",{id:!0});var sa=o(k);z=s(sa,"A",{href:!0});var oa=o(z);Xe=l(oa,"Context"),oa.forEach(t),sa.forEach(t),Pe=f(e),d=s(e,"P",{});var re=o(d);Ye=l(re,`We’re developing an enterprise software for a client with a microservices
architecture that utilizes `),w=s(re,"A",{href:!0,rel:!0});var na=o(w);$e=l(na,"Docker"),na.forEach(t),et=l(re," containers and "),b=s(re,"A",{href:!0,rel:!0});var la=o(b);tt=l(la,"DC/OS"),la.forEach(t),at=l(re,`
orchestration.`),re.forEach(t),Se=f(e),I=s(e,"H3",{id:!0});var ia=o(I);F=s(ia,"A",{href:!0});var pa=o(F);rt=l(pa,"Our Setup"),pa.forEach(t),ia.forEach(t),Oe=f(e),v=s(e,"UL",{});var se=o(v);j=s(se,"LI",{});var Xt=o(j);st=l(Xt,"Dozens of microservices built with "),D=s(Xt,"A",{href:!0,rel:!0});var ca=o(D);ot=l(ca,"Spring Framework"),ca.forEach(t),Xt.forEach(t),nt=f(se),C=s(se,"LI",{});var Ve=o(C);lt=l(Ve,"Microservices runs on "),P=s(Ve,"A",{href:!0,rel:!0});var ua=o(P);it=l(ua,"DC/OS"),ua.forEach(t),pt=l(Ve,"."),Ve.forEach(t),ct=f(se),ie=s(se,"LI",{});var fa=o(ie);ut=l(fa,`Few environments (development, staging, production) each having their
own registry.`),fa.forEach(t),se.forEach(t),xe=f(e),J=s(e,"P",{});var ha=o(J);ft=l(ha,"Some of the things you might ask me:"),ha.forEach(t),Ae=f(e),y=s(e,"UL",{});var oe=o(y);pe=s(oe,"LI",{});var ma=o(pe);K=s(ma,"P",{});var Yt=o(K);ce=s(Yt,"STRONG",{});var da=o(ce);ue=s(da,"EM",{});var va=o(ue);ht=l(va,"“Why the f*** do you have more than one registry?”"),va.forEach(t),da.forEach(t),mt=l(Yt,`
Production was intended to have its own registry since it doesn’t have
any access to the internet.`),Yt.forEach(t),ma.forEach(t),dt=f(oe),fe=s(oe,"LI",{});var ya=o(fe);V=s(ya,"P",{});var $t=o(V);he=s($t,"STRONG",{});var Ea=o(he);me=s(Ea,"EM",{});var _a=o(me);vt=l(_a,"“Why not use a third party private docker registry?”"),_a.forEach(t),Ea.forEach(t),yt=l($t,`
Production servers doesn’t have any internet access (most of the app
is meant to be access via VPN)`),$t.forEach(t),ya.forEach(t),Et=f(oe),de=s(oe,"LI",{});var ga=o(de);B=s(ga,"P",{});var ea=o(B);ve=s(ea,"STRONG",{});var ka=o(ve);S=s(ka,"EM",{});var Be=o(S);_t=l(Be,"“Why not use "),O=s(Be,"A",{href:!0,rel:!0});var wa=o(O);gt=l(wa,"Jenkins"),wa.forEach(t),kt=l(Be,` or some other in-premise CI/CD that
can automatically tag and push your images to your different
envirnments?”`),Be.forEach(t),ka.forEach(t),wt=l(ea,`
Actually, I’m not so sure because I’ve heard other companies use CI/CD
from development -> production. Maybe the client doesn’t want CI/CD in
the production environment. I really don’t have any idea regarding this.`),ea.forEach(t),ga.forEach(t),oe.forEach(t),Le=f(e),x=s(e,"H3",{id:!0});var ba=o(x);Q=s(ba,"A",{href:!0});var Ia=o(Q);bt=l(Ia,"Problem"),Ia.forEach(t),ba.forEach(t),Te=f(e),Z=s(e,"P",{});var Da=o(Z);It=l(Da,`It is a pain in the arse when you need to manually tag and push all your
images from one registry to another, whether it may come from your local
machine or one of your registry servers.`),Da.forEach(t),Me=f(e),A=s(e,"H3",{id:!0});var Ca=o(A);X=s(Ca,"A",{href:!0});var Pa=o(X);Dt=l(Pa,"Solution"),Pa.forEach(t),Ca.forEach(t),Re=f(e),E=s(e,"P",{});var ne=o(E);Ct=l(ne,"I’ve written a "),L=s(ne,"A",{href:!0,rel:!0});var Sa=o(L);ye=s(Sa,"CODE",{});var Oa=o(ye);Pt=l(Oa,"transfer_images.sh"),Oa.forEach(t),Sa.forEach(t),St=l(ne,` found on my
`),T=s(ne,"A",{href:!0,rel:!0});var xa=o(T);Ot=l(xa,"scripts repo"),xa.forEach(t),xt=l(ne,"."),ne.forEach(t),qe=f(e),Y=s(e,"P",{});var Aa=o(Y);At=l(Aa,"Usage:"),Aa.forEach(t),We=f(e),M=s(e,"PRE",{class:!0});var Za=o(M);Za.forEach(t),He=f(e),R=s(e,"H3",{id:!0});var La=o(R);$=s(La,"A",{href:!0});var Ta=o($);Lt=l(Ta,"Examples"),Ta.forEach(t),La.forEach(t),Ge=f(e),ee=s(e,"P",{});var Ma=o(ee);Tt=l(Ma,"Given these docker images in your local repositories:"),Ma.forEach(t),Ue=f(e),q=s(e,"PRE",{class:!0});var Xa=o(q);Xa.forEach(t),Ne=f(e),m=s(e,"P",{});var U=o(m);Mt=l(U,"Tag "),Ee=s(U,"CODE",{});var Ra=o(Ee);Rt=l(Ra,"node"),Ra.forEach(t),qt=l(U," and "),_e=s(U,"CODE",{});var qa=o(_e);Wt=l(qa,"postgres"),qa.forEach(t),Ht=l(U," to "),ge=s(U,"CODE",{});var Wa=o(ge);Gt=l(Wa,"yourregistry.com"),Wa.forEach(t),U.forEach(t),ze=f(e),W=s(e,"PRE",{class:!0});var Ya=o(W);Ya.forEach(t),Fe=f(e),h=s(e,"P",{});var _=o(h);Ut=l(_,"Tag "),ke=s(_,"CODE",{});var Ha=o(ke);Nt=l(Ha,"node"),Ha.forEach(t),zt=l(_," and "),we=s(_,"CODE",{});var Ga=o(we);Ft=l(Ga,"rabbitmq"),Ga.forEach(t),jt=l(_," tagged with "),be=s(_,"CODE",{});var Ua=o(be);Jt=l(Ua,"yourregistry.com"),Ua.forEach(t),Kt=l(_," to "),Ie=s(_,"CODE",{});var Na=o(Ie);Vt=l(Na,"yourotherregistry.com"),Na.forEach(t),Bt=l(_," and then push it"),_.forEach(t),je=f(e),H=s(e,"PRE",{class:!0});var $a=o(H);$a.forEach(t),Je=f(e),G=s(e,"H3",{id:!0});var za=o(G);te=s(za,"A",{href:!0});var Fa=o(te);Qt=l(Fa,"Wrapping this up"),Fa.forEach(t),za.forEach(t),Ke=f(e),ae=s(e,"P",{});var ja=o(ae);Zt=l(ja,`So there you have it, my fancy transfer images script. I hope it will help
some of you guys/gals that face the same problem as I did. I’ll write
more scripts if I encounter more repetitive and/or tedious tasks.`),ja.forEach(t),this.h()},h(){c(z,"href","#context"),c(k,"id","context"),c(w,"href","https://www.docker.com/"),c(w,"rel","nofollow"),c(b,"href","https://dcos.io/"),c(b,"rel","nofollow"),c(F,"href","#our-setup"),c(I,"id","our-setup"),c(D,"href","https://spring.io/"),c(D,"rel","nofollow"),c(P,"href","https://dcos.io/"),c(P,"rel","nofollow"),c(O,"href","https://jenkins.io/"),c(O,"rel","nofollow"),c(Q,"href","#problem"),c(x,"id","problem"),c(X,"href","#solution"),c(A,"id","solution"),c(L,"href","https://github.com/nasvillanueva/scripts/blob/master/transfer_images.sh"),c(L,"rel","nofollow"),c(T,"href","https://github.com/nasvillanueva/scripts"),c(T,"rel","nofollow"),c(M,"class","language-shell"),c($,"href","#examples"),c(R,"id","examples"),c(q,"class","language-shell"),c(W,"class","language-shell"),c(H,"class","language-shell"),c(te,"href","#wrapping-this-up"),c(G,"id","wrapping-this-up")},m(e,i){p(e,g,i),a(g,Qe),p(e,De,i),p(e,N,i),a(N,le),a(le,Ze),p(e,Ce,i),p(e,k,i),a(k,z),a(z,Xe),p(e,Pe,i),p(e,d,i),a(d,Ye),a(d,w),a(w,$e),a(d,et),a(d,b),a(b,tt),a(d,at),p(e,Se,i),p(e,I,i),a(I,F),a(F,rt),p(e,Oe,i),p(e,v,i),a(v,j),a(j,st),a(j,D),a(D,ot),a(v,nt),a(v,C),a(C,lt),a(C,P),a(P,it),a(C,pt),a(v,ct),a(v,ie),a(ie,ut),p(e,xe,i),p(e,J,i),a(J,ft),p(e,Ae,i),p(e,y,i),a(y,pe),a(pe,K),a(K,ce),a(ce,ue),a(ue,ht),a(K,mt),a(y,dt),a(y,fe),a(fe,V),a(V,he),a(he,me),a(me,vt),a(V,yt),a(y,Et),a(y,de),a(de,B),a(B,ve),a(ve,S),a(S,_t),a(S,O),a(O,gt),a(S,kt),a(B,wt),p(e,Le,i),p(e,x,i),a(x,Q),a(Q,bt),p(e,Te,i),p(e,Z,i),a(Z,It),p(e,Me,i),p(e,A,i),a(A,X),a(X,Dt),p(e,Re,i),p(e,E,i),a(E,Ct),a(E,L),a(L,ye),a(ye,Pt),a(E,St),a(E,T),a(T,Ot),a(E,xt),p(e,qe,i),p(e,Y,i),a(Y,At),p(e,We,i),p(e,M,i),M.innerHTML=Ka,p(e,He,i),p(e,R,i),a(R,$),a($,Lt),p(e,Ge,i),p(e,ee,i),a(ee,Tt),p(e,Ue,i),p(e,q,i),q.innerHTML=Va,p(e,Ne,i),p(e,m,i),a(m,Mt),a(m,Ee),a(Ee,Rt),a(m,qt),a(m,_e),a(_e,Wt),a(m,Ht),a(m,ge),a(ge,Gt),p(e,ze,i),p(e,W,i),W.innerHTML=Ba,p(e,Fe,i),p(e,h,i),a(h,Ut),a(h,ke),a(ke,Nt),a(h,zt),a(h,we),a(we,Ft),a(h,jt),a(h,be),a(be,Jt),a(h,Kt),a(h,Ie),a(Ie,Vt),a(h,Bt),p(e,je,i),p(e,H,i),H.innerHTML=Qa,p(e,Je,i),p(e,G,i),a(G,te),a(te,Qt),p(e,Ke,i),p(e,ae,i),a(ae,Zt)},p:ta,i:ta,o:ta,d(e){e&&t(g),e&&t(De),e&&t(N),e&&t(Ce),e&&t(k),e&&t(Pe),e&&t(d),e&&t(Se),e&&t(I),e&&t(Oe),e&&t(v),e&&t(xe),e&&t(J),e&&t(Ae),e&&t(y),e&&t(Le),e&&t(x),e&&t(Te),e&&t(Z),e&&t(Me),e&&t(A),e&&t(Re),e&&t(E),e&&t(qe),e&&t(Y),e&&t(We),e&&t(M),e&&t(He),e&&t(R),e&&t(Ge),e&&t(ee),e&&t(Ue),e&&t(q),e&&t(Ne),e&&t(m),e&&t(ze),e&&t(W),e&&t(Fe),e&&t(h),e&&t(je),e&&t(H),e&&t(Je),e&&t(G),e&&t(Ke),e&&t(ae)}}}const or={title:"Migrating Docker Images",date:"2017-08-11T12:55:00Z",tags:["Scripts","Docker","Shell","DevOps"]};class nr extends er{constructor(g){super(),tr(this,g,null,rr,ar,{})}}export{nr as default,or as metadata};
