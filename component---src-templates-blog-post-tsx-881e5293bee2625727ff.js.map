{"version":3,"file":"component---src-templates-blog-post-tsx-881e5293bee2625727ff.js","mappings":"uKA6CA,IAvCgB,SAAH,GAAkC,IAAD,IAA3BA,EAAI,EAAJA,KACXC,EAAYD,EAAKE,YAAYC,MAC7BC,GAASC,EAAAA,EAAAA,GAAgC,QAAxB,EAACL,EAAKE,YAAYE,cAAM,QAAI,MAC7CE,EAA4B,QAAxB,EAAGN,EAAKE,YAAYI,YAAI,QAAI,GAEtC,OACEC,EAAAA,cAAAA,MAAAA,KACEA,EAAAA,cAACC,EAAAA,KAAI,CAACC,UAAU,qCAAqCC,GAAIV,EAAKW,OAAOC,MACnEL,EAAAA,cAAAA,MAAAA,CAAKE,UAAU,gCACF,MAAVL,EACGG,EAAAA,cAACM,EAAAA,EAAW,CAACC,MAAOV,EAAQW,IAAKd,IACjCM,EAAAA,cAACS,EAAAA,EAAW,CAACC,YAAY,UAAUC,YAAa,GAAG,EAAGC,IAAI,mCAAmCJ,IAAKd,EAAU,uBAIlHM,EAAAA,cAAAA,IAAAA,CAAGE,UAAU,4BAA4BR,IAG3CM,EAAAA,cAAAA,MAAAA,CAAKE,UAAU,0DACbF,EAAAA,cAAAA,OAAAA,KAAOP,EAAKE,YAAYkB,MACxBb,EAAAA,cAAAA,OAAAA,KAAOP,EAAKW,OAAOU,YAAYC,OAGhChB,EAAKiB,OAAS,EACXhB,EAAAA,cAAAA,MAAAA,CAAKE,UAAU,aACdH,EAAKkB,KAAI,SAACC,EAAKC,GAAK,OACnBnB,EAAAA,cAACC,EAAAA,KAAI,CAACC,UAAU,MAAMkB,IAAKD,EAAOhB,GAAE,eAAiBe,GAAQA,EAAW,KAG1E,KAIV,C,yICpBA,EAbwB,SAAH,GAAsC,IACnDG,EADwB,EAALC,MACEC,MAAM,EAAG,GACpC,OACEvB,EAAAA,cAAAA,MAAAA,CAAKE,UAAU,0BACZmB,EAAaJ,KAAI,SAACxB,EAAM0B,GAAK,OAAMnB,EAAAA,cAACwB,EAAAA,EAAO,CAAC/B,KAAMA,EAAM2B,IAAKD,GAAS,IAG7E,ECiCA,EAvCiB,SAAH,GAsBN,QArBNM,KACEhC,EAAI,EAAJA,KAES4B,EAAY,EADrBA,aACEK,MAmBEhC,EAAYD,EAAKE,YAAYC,MAEnC,OACEI,EAAAA,cAAC2B,EAAAA,EAAM,KACL3B,EAAAA,cAAAA,KAAAA,CAAIE,UAAU,4CAA4CR,GAC1DM,EAAAA,cAAAA,MAAAA,CAAKE,UAAU,WAAW0B,wBAAyB,CAAEC,OAAQpC,EAAKqC,QAElE9B,EAAAA,cAAAA,MAAAA,CAAKE,UAAU,SACbF,EAAAA,cAAAA,MAAAA,CAAKE,UAAU,yBACfF,EAAAA,cAAAA,KAAAA,CAAIE,UAAU,8CAA4C,iBAC1DF,EAAAA,cAAC+B,EAAe,CAACT,MAAOD,KAIhC,EAIaW,EAAe,SAACC,GAC3B,IAAMC,EAAYD,EAAMR,KAAKhC,KAAKE,YAAYC,MAE9C,OAAOI,EAAAA,cAACmC,EAAAA,EAAa,CAACC,UAAWH,EAAOC,UAAWA,GACrD,C","sources":["webpack://nasvillanueva.github.io/./src/components/DevPost.tsx","webpack://nasvillanueva.github.io/./src/components/RelatedDevPosts.tsx","webpack://nasvillanueva.github.io/./src/templates/blog-post.tsx"],"sourcesContent":["import React from \"react\";\nimport type { Post } from \"@@types/dev\";\nimport { GatsbyImage, getImage, StaticImage } from \"gatsby-plugin-image\";\nimport * as PropTypes from \"prop-types\";\nimport { Link } from \"gatsby\";\n\nconst DevPost = ({ post }: { post: Post }) => {\n  const postTitle = post.frontmatter.title;\n  const banner = getImage(post.frontmatter.banner ?? null);\n  const tags = post.frontmatter.tags ?? []\n\n  return (\n    <div>\n      <Link className=\"font-serif block no-underline mb-5\" to={post.fields.slug}>\n        <div className=\"shadow-lg shadow-nxs-blue/50\">\n          {banner != null\n            ? <GatsbyImage image={banner} alt={postTitle} />\n            : <StaticImage placeholder=\"blurred\" aspectRatio={16/9} src=\"../images/default-dev-banner.jpg\" alt={postTitle}></StaticImage>\n          }\n        </div>\n\n        <p className=\"mt-6 text-xl font-medium\">{postTitle}</p>\n      </Link>\n\n      <div className=\"mt-6 text-slate-500 text-[0.7rem] flex justify-between\">\n        <span>{post.frontmatter.date}</span>\n        <span>{post.fields.readingTime.text}</span>\n      </div>\n\n      {tags.length > 0\n        ? <div className=\"mt-3 tags\">\n          {tags.map((tag, index) => (\n            <Link className=\"tag\" key={index} to={`/dev/tagged/${tag}`}>{tag}</Link>\n          ))}\n        </div>\n        : null\n      }\n    </div>\n  );\n}\n\nDevPost.propTypes = {\n  post: PropTypes.object\n};\n\nexport default DevPost;\n","import * as React from \"react\";\nimport type { Post } from \"@@types/dev\";\nimport DevPost from \"@components/DevPost\";\nimport PropTypes from \"prop-types\";\n\n\nconst RelatedDevPosts = ({ posts }: { posts: Post[] }) => {\n  const relatedPosts = posts.slice(0, 3);\n  return (\n    <div className=\"grid grid-cols-3 gap-5\">\n      {relatedPosts.map((post, index) => (<DevPost post={post} key={index} />))}\n    </div>\n  );\n}\n\nRelatedDevPosts.propTypes = {\n  posts: PropTypes.array\n};\n\nexport default RelatedDevPosts;\n","import * as React from \"react\";\nimport { graphql, HeadFC } from \"gatsby\";\nimport Layout from \"@components/Layout\";\nimport HeadComponent from \"@components/Head\";\nimport RelatedDevPosts from \"@components/RelatedDevPosts\";\nimport type { Post } from \"@@types/dev\";\n\nconst BlogPost = ({\n  data: {\n    post,\n    relatedPosts: {\n      nodes: relatedPosts\n    }\n  },\n}: {\n  data: {\n    post: {\n      id: string;\n      excerpt: string;\n      html: string;\n      frontmatter: {\n        title: string;\n        date: string;\n      }\n    },\n    relatedPosts: {\n      nodes: Post[]\n    }\n  },\n  }) => {\n  const postTitle = post.frontmatter.title;\n\n  return (\n    <Layout>\n      <h1 className=\"text-3xl my-6 font-semibold text-nxs-red\">{postTitle}</h1>\n      <div className=\"markdown\" dangerouslySetInnerHTML={{ __html: post.html }}></div>\n\n      <div className=\"mt-20\">\n        <div className=\"border-b-[2px] w-1/4\"></div>\n        <h2 className=\"mt-10 mb-5 text-2xl font-serif font-medium\">Related Posts</h2>\n        <RelatedDevPosts posts={relatedPosts} />\n      </div>\n    </Layout>\n  );\n}\n\nexport default BlogPost;\n\nexport const Head: HeadFC = (props: any) => {\n  const pageTitle = props.data.post.frontmatter.title;\n\n  return <HeadComponent headProps={props} pageTitle={pageTitle} />\n}\n\nexport const pageQuery = graphql`\nquery BlogPostBySlug($slug: String!, $tags: [String!]!) {\n  site {\n    siteMetadata {\n      title\n      author\n    }\n  }\n  post: markdownRemark(fields: { slug: { eq: $slug } }) {\n    id\n    html\n    frontmatter {\n      title\n      date(formatString: \"YYYY-MM-DD\")\n      tags\n    }\n  }\n  relatedPosts: allMarkdownRemark(\n    filter: {fields: {site: {eq: \"dev\"}}, frontmatter: {tags: {in: $tags}}}\n    limit: 3\n  ) {\n    nodes {\n      frontmatter {\n        tags\n        date(formatString: \"YYYY-MM-DD\")\n        title\n      }\n      fields {\n        readingTime {\n          text\n        }\n        site\n        slug\n      }\n    }\n  }\n}\n`;\n"],"names":["post","postTitle","frontmatter","title","banner","getImage","tags","React","Link","className","to","fields","slug","GatsbyImage","image","alt","StaticImage","placeholder","aspectRatio","src","date","readingTime","text","length","map","tag","index","key","relatedPosts","posts","slice","DevPost","data","nodes","Layout","dangerouslySetInnerHTML","__html","html","RelatedDevPosts","Head","props","pageTitle","HeadComponent","headProps"],"sourceRoot":""}